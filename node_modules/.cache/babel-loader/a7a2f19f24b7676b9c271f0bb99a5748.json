{"ast":null,"code":"\"use strict\";\n\nvar normalize = require(\"./options\").normalize;\n\nvar comments = require(\"./comments\");\n\nfunction printSubtree(path, print, options, printAstToDoc) {\n  if (options.printer.embed) {\n    return options.printer.embed(path, print, function (text, partialNextOptions) {\n      return textToDoc(text, partialNextOptions, options, printAstToDoc);\n    }, options);\n  }\n}\n\nfunction textToDoc(text, partialNextOptions, parentOptions, printAstToDoc) {\n  var nextOptions = normalize(Object.assign({}, parentOptions, partialNextOptions, {\n    parentParser: parentOptions.parser,\n    embeddedInHtml: !!(parentOptions.embeddedInHtml || parentOptions.parser === \"html\" || parentOptions.parser === \"vue\" || parentOptions.parser === \"angular\" || parentOptions.parser === \"lwc\"),\n    originalText: text\n  }), {\n    passThrough: true\n  });\n\n  var result = require(\"./parser\").parse(text, nextOptions);\n\n  var ast = result.ast;\n  text = result.text;\n  var astComments = ast.comments;\n  delete ast.comments;\n  comments.attach(astComments, ast, text, nextOptions);\n  return printAstToDoc(ast, nextOptions);\n}\n\nmodule.exports = {\n  printSubtree: printSubtree\n};","map":null,"metadata":{},"sourceType":"script"}