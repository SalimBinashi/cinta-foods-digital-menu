{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = loadBlockHoistPlugin;\n\nfunction _traverse() {\n  var data = require(\"@babel/traverse\");\n\n  _traverse = function _traverse() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _plugin = require(\"../config/plugin\");\n\nvar LOADED_PLUGIN;\n\nfunction loadBlockHoistPlugin() {\n  if (!LOADED_PLUGIN) {\n    LOADED_PLUGIN = new _plugin.default(Object.assign({}, blockHoistPlugin, {\n      visitor: _traverse().default.explode(blockHoistPlugin.visitor)\n    }), {});\n  }\n\n  return LOADED_PLUGIN;\n}\n\nfunction priority(bodyNode) {\n  var priority = bodyNode == null ? void 0 : bodyNode._blockHoist;\n  if (priority == null) return 1;\n  if (priority === true) return 2;\n  return priority;\n}\n\nfunction stableSort(body) {\n  var buckets = Object.create(null);\n\n  for (var i = 0; i < body.length; i++) {\n    var n = body[i];\n    var p = priority(n);\n    var bucket = buckets[p] || (buckets[p] = []);\n    bucket.push(n);\n  }\n\n  var keys = Object.keys(buckets).map(function (k) {\n    return +k;\n  }).sort(function (a, b) {\n    return b - a;\n  });\n  var index = 0;\n\n  var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var key = _step.value;\n      var _bucket = buckets[key];\n\n      var _iterator2 = _createForOfIteratorHelper(_bucket),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _n = _step2.value;\n          body[index++] = _n;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return body;\n}\n\nvar blockHoistPlugin = {\n  name: \"internal.blockHoist\",\n  visitor: {\n    Block: {\n      exit: function exit(_ref) {\n        var node = _ref.node;\n        var body = node.body;\n        var max = Math.pow(2, 30) - 1;\n        var hasChange = false;\n\n        for (var i = 0; i < body.length; i++) {\n          var n = body[i];\n          var p = priority(n);\n\n          if (p > max) {\n            hasChange = true;\n            break;\n          }\n\n          max = p;\n        }\n\n        if (!hasChange) return;\n        node.body = stableSort(body.slice());\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}