{"ast":null,"code":"import _defineProperty from \"/home/belbet/Project files/react-restaurant-menu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/belbet/Project files/react-restaurant-menu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/belbet/Project files/react-restaurant-menu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/belbet/Project files/react-restaurant-menu/src/Context.js\";\n\nimport React, { useState } from \"react\";\nexport var Context = React.createContext();\nexport var Provider = function Provider(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var updateItem = function updateItem(type, index, count) {\n    var key = \"\".concat(type.toLowerCase(), \"-\").concat(index);\n    var amount = Number.isNaN(Number(count)) ? 0 : Number(count);\n    setItems(_objectSpread(_objectSpread({}, items), {}, _defineProperty({}, key, Number(amount))));\n  };\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: [items, updateItem],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/belbet/Project files/react-restaurant-menu/src/Context.js"],"names":["React","useState","Context","createContext","Provider","props","items","setItems","updateItem","type","index","count","key","toLowerCase","amount","Number","isNaN","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,IAAMC,OAAO,GAAGF,KAAK,CAACG,aAAN,EAAhB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOC,KAAP,EAAcC,KAAd,EAAwB;AACzC,QAAMC,GAAG,aAAMH,IAAI,CAACI,WAAL,EAAN,cAA4BH,KAA5B,CAAT;AACA,QAAMI,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACJ,KAAD,CAAnB,IAA8B,CAA9B,GAAkCI,MAAM,CAACJ,KAAD,CAAvD;AAEAJ,IAAAA,QAAQ,iCAAMD,KAAN,2BAAcM,GAAd,EAAoBG,MAAM,CAACD,MAAD,CAA1B,GAAR;AACD,GALD;;AAOA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE,CAACR,KAAD,EAAQE,UAAR,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACY,QADT,CADF;AAKD,CAfM","sourcesContent":["import React, { useState } from \"react\";\n\nexport const Context = React.createContext();\n\nexport const Provider = props => {\n  const [items, setItems] = useState({});\n\n  const updateItem = (type, index, count) => {\n    const key = `${type.toLowerCase()}-${index}`;\n    const amount = Number.isNaN(Number(count)) ? 0 : Number(count);\n\n    setItems({ ...items, [key]: Number(amount) });\n  };\n\n  return (\n    <Context.Provider value={[items, updateItem]}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}