{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar t = require(\"@babel/types\");\n\nvar TraversalContext = /*#__PURE__*/function () {\n  function TraversalContext(scope, opts, state, parentPath) {\n    _classCallCheck(this, TraversalContext);\n\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  _createClass(TraversalContext, [{\n    key: \"shouldVisit\",\n    value: function shouldVisit(node) {\n      var opts = this.opts;\n      if (opts.enter || opts.exit) return true;\n      if (opts[node.type]) return true;\n      var keys = t.VISITOR_KEYS[node.type];\n      if (!(keys != null && keys.length)) return false;\n\n      var _iterator = _createForOfIteratorHelper(keys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          if (node[key]) return true;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"create\",\n    value: function create(node, obj, key, listKey) {\n      return _path.default.get({\n        parentPath: this.parentPath,\n        parent: node,\n        container: obj,\n        key: key,\n        listKey: listKey\n      });\n    }\n  }, {\n    key: \"maybeQueue\",\n    value: function maybeQueue(path, notPriority) {\n      if (this.queue) {\n        if (notPriority) {\n          this.queue.push(path);\n        } else {\n          this.priorityQueue.push(path);\n        }\n      }\n    }\n  }, {\n    key: \"visitMultiple\",\n    value: function visitMultiple(container, parent, listKey) {\n      if (container.length === 0) return false;\n      var queue = [];\n\n      for (var key = 0; key < container.length; key++) {\n        var node = container[key];\n\n        if (node && this.shouldVisit(node)) {\n          queue.push(this.create(parent, container, key, listKey));\n        }\n      }\n\n      return this.visitQueue(queue);\n    }\n  }, {\n    key: \"visitSingle\",\n    value: function visitSingle(node, key) {\n      if (this.shouldVisit(node[key])) {\n        return this.visitQueue([this.create(node, node, key)]);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"visitQueue\",\n    value: function visitQueue(queue) {\n      this.queue = queue;\n      this.priorityQueue = [];\n      var visited = new WeakSet();\n      var stop = false;\n\n      var _iterator2 = _createForOfIteratorHelper(queue),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var path = _step2.value;\n          path.resync();\n\n          if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n            path.pushContext(this);\n          }\n\n          if (path.key === null) continue;\n          var node = path.node;\n          if (visited.has(node)) continue;\n          if (node) visited.add(node);\n\n          if (path.visit()) {\n            stop = true;\n            break;\n          }\n\n          if (this.priorityQueue.length) {\n            stop = this.visitQueue(this.priorityQueue);\n            this.priorityQueue = [];\n            this.queue = queue;\n            if (stop) break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(queue),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _path2 = _step3.value;\n\n          _path2.popContext();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      this.queue = null;\n      return stop;\n    }\n  }, {\n    key: \"visit\",\n    value: function visit(node, key) {\n      var nodes = node[key];\n      if (!nodes) return false;\n\n      if (Array.isArray(nodes)) {\n        return this.visitMultiple(nodes, node, key);\n      } else {\n        return this.visitSingle(node, key);\n      }\n    }\n  }]);\n\n  return TraversalContext;\n}();\n\nexports.default = TraversalContext;","map":null,"metadata":{},"sourceType":"script"}