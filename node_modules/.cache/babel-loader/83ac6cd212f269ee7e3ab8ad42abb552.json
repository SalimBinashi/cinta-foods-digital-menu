{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformFromAstAsync = exports.transformFromAstSync = exports.transformFromAst = void 0;\n\nfunction _gensync() {\n  var data = require(\"gensync\");\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _config = require(\"./config\");\n\nvar _transformation = require(\"./transformation\");\n\nvar transformFromAstRunner = _gensync()( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ast, code, opts) {\n  var config;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield((0, _config.default)(opts), \"t0\", 1);\n\n        case 1:\n          config = _context.t0;\n\n          if (!(config === null)) {\n            _context.next = 4;\n            break;\n          }\n\n          return _context.abrupt(\"return\", null);\n\n        case 4:\n          if (ast) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error(\"No AST given\");\n\n        case 6:\n          return _context.delegateYield((0, _transformation.run)(config, code, ast), \"t1\", 7);\n\n        case 7:\n          return _context.abrupt(\"return\", _context.t1);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar transformFromAst = function transformFromAst(ast, code, opts, callback) {\n  if (typeof opts === \"function\") {\n    callback = opts;\n    opts = undefined;\n  }\n\n  if (callback === undefined) {\n    return transformFromAstRunner.sync(ast, code, opts);\n  }\n\n  transformFromAstRunner.errback(ast, code, opts, callback);\n};\n\nexports.transformFromAst = transformFromAst;\nvar transformFromAstSync = transformFromAstRunner.sync;\nexports.transformFromAstSync = transformFromAstSync;\nvar transformFromAstAsync = transformFromAstRunner.async;\nexports.transformFromAstAsync = transformFromAstAsync;","map":null,"metadata":{},"sourceType":"script"}