{"ast":null,"code":"import _slicedToArray from \"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport SimpleEditor from 'react-simple-code-editor';\nimport Highlight, { Prism } from 'prism-react-renderer';\nimport { useValueDebounce, lightTheme } from '../index';\nimport { getStyles } from '../utils';\n\nvar highlightCode = function highlightCode(_ref) {\n  var code = _ref.code,\n      theme = _ref.theme,\n      transformToken = _ref.transformToken,\n      language = _ref.language;\n  return React.createElement(Highlight, {\n    Prism: Prism,\n    code: code,\n    theme: theme,\n    language: language || 'jsx'\n  }, function (_ref2) {\n    var tokens = _ref2.tokens,\n        getLineProps = _ref2.getLineProps,\n        getTokenProps = _ref2.getTokenProps;\n    return React.createElement(React.Fragment, null, tokens.map(function (line, i) {\n      return React.createElement(\"div\", Object.assign({\n        key: i\n      }, getLineProps({\n        line: line,\n        key: i\n      })), line.map(function (token, key) {\n        var tokenProps = getTokenProps({\n          token: token,\n          key: key\n        });\n\n        if (transformToken) {\n          return transformToken(tokenProps);\n        }\n\n        return React.createElement(\"span\", Object.assign({\n          key: key\n        }, tokenProps));\n      }));\n    }));\n  });\n};\n\nvar Editor = function Editor(_ref3) {\n  var globalCode = _ref3.code,\n      transformToken = _ref3.transformToken,\n      onChange = _ref3.onChange,\n      placeholder = _ref3.placeholder,\n      language = _ref3.language,\n      theme = _ref3.theme,\n      testid = _ref3['data-testid'],\n      className = _ref3.className;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      focused = _React$useState2[0],\n      setFocused = _React$useState2[1];\n\n  var editorTheme = Object.assign(Object.assign({}, theme || lightTheme), {\n    plain: Object.assign({\n      whiteSpace: 'break-spaces'\n    }, (theme || lightTheme).plain)\n  });\n\n  var _useValueDebounce = useValueDebounce(globalCode, onChange),\n      _useValueDebounce2 = _slicedToArray(_useValueDebounce, 2),\n      code = _useValueDebounce2[0],\n      setCode = _useValueDebounce2[1];\n\n  return React.createElement(\"div\", Object.assign({\n    \"data-testid\": testid\n  }, getStyles({\n    boxSizing: 'border-box',\n    paddingLeft: '4px',\n    paddingRight: '4px',\n    maxWidth: 'auto',\n    overflow: 'hidden',\n    border: focused ? '1px solid #276EF1' : '1px solid #CCC',\n    borderRadius: '5px'\n  }, className)), React.createElement(\"style\", {\n    dangerouslySetInnerHTML: {\n      __html: \".npm__react-simple-code-editor__textarea { outline: none !important }\"\n    }\n  }), React.createElement(SimpleEditor, {\n    value: code || '',\n    placeholder: placeholder,\n    highlight: function highlight(code) {\n      return highlightCode({\n        code: code,\n        theme: editorTheme,\n        transformToken: transformToken,\n        language: language\n      });\n    },\n    onValueChange: function onValueChange(code) {\n      return setCode(code);\n    },\n    onFocus: function onFocus() {\n      return setFocused(true);\n    },\n    onBlur: function onBlur() {\n      return setFocused(false);\n    },\n    padding: 8,\n    style: editorTheme.plain\n  }));\n};\n\nexport default Editor;","map":null,"metadata":{},"sourceType":"module"}