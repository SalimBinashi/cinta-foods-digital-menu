{"ast":null,"code":"import _defineProperty from \"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/belbet/Project files/cinta-foods-digital-menu/client/src/OrdersContext.js\";\n\nimport React, { useState } from \"react\";\nexport var OrdersContext = React.createContext();\nexport var Provider = function Provider(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      orders = _useState2[0],\n      setOrders = _useState2[1];\n\n  var updateOrder = function updateOrder(type, name, count) {\n    // const key = type;\n    // console.log(key);\n    var key = \"\".concat(name.toLowerCase());\n    var amount = Number.isNaN(Number(count)) ? 0 : Number(count);\n    setOrders(_defineProperty({\n      orders: orders\n    }, key, Number(amount)));\n  };\n\n  return /*#__PURE__*/React.createElement(OrdersContext.Provider, {\n    value: [orders, updateOrder],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/belbet/Project files/cinta-foods-digital-menu/client/src/OrdersContext.js"],"names":["React","useState","OrdersContext","createContext","Provider","props","orders","setOrders","updateOrder","type","name","count","key","toLowerCase","amount","Number","isNaN","children"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,IAAMC,aAAa,GAAGF,KAAK,CAACG,aAAN,EAAtB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B,kBAA4BJ,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOK,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAuB;AACzC;AACA;AACA,QAAMC,GAAG,aAAMF,IAAI,CAACG,WAAL,EAAN,CAAT;AACA,QAAMC,MAAM,GAAGC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACJ,KAAD,CAAnB,IAA8B,CAA9B,GAAkCI,MAAM,CAACJ,KAAD,CAAvD;AAEAJ,IAAAA,SAAS;AAAED,MAAAA,MAAM,EAANA;AAAF,OAAWM,GAAX,EAAiBG,MAAM,CAACD,MAAD,CAAvB,EAAT;AACD,GAPD;;AASA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE,CAACR,MAAD,EAASE,WAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACY,QADT,CADF;AAKD,CAjBM","sourcesContent":["import React, { useState } from \"react\";\n\nexport const OrdersContext = React.createContext();\n\nexport const Provider = props => {\n  const [orders, setOrders] = useState({});\n\n  const updateOrder = (type, name, count) => {\n    // const key = type;\n    // console.log(key);\n    const key = `${name.toLowerCase()}`;\n    const amount = Number.isNaN(Number(count)) ? 0 : Number(count);\n\n    setOrders({orders, [key]: Number(amount)});\n  };\n\n  return (\n    <OrdersContext.Provider value={[orders, updateOrder]}>\n      {props.children}\n    </OrdersContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}