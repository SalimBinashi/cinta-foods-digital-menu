{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = hoistVariables;\n\nvar t = require(\"@babel/types\");\n\nvar visitor = {\n  Scope: function Scope(path, state) {\n    if (state.kind === \"let\") path.skip();\n  },\n  FunctionParent: function FunctionParent(path) {\n    path.skip();\n  },\n  VariableDeclaration: function VariableDeclaration(path, state) {\n    if (state.kind && path.node.kind !== state.kind) return;\n    var nodes = [];\n    var declarations = path.get(\"declarations\");\n    var firstId;\n\n    var _iterator = _createForOfIteratorHelper(declarations),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var declar = _step.value;\n        firstId = declar.node.id;\n\n        if (declar.node.init) {\n          nodes.push(t.expressionStatement(t.assignmentExpression(\"=\", declar.node.id, declar.node.init)));\n        }\n\n        for (var _i = 0, _Object$keys = Object.keys(declar.getBindingIdentifiers()); _i < _Object$keys.length; _i++) {\n          var name = _Object$keys[_i];\n          state.emit(t.identifier(name), name, declar.node.init !== null);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (path.parentPath.isFor({\n      left: path.node\n    })) {\n      path.replaceWith(firstId);\n    } else {\n      path.replaceWithMultiple(nodes);\n    }\n  }\n};\n\nfunction hoistVariables(path, emit) {\n  var kind = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"var\";\n  path.traverse(visitor, {\n    kind: kind,\n    emit: emit\n  });\n}","map":null,"metadata":{},"sourceType":"script"}