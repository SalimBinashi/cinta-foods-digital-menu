{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar helperPluginUtils = require('@babel/helper-plugin-utils');\n\nvar transformReactJSX = require('@babel/plugin-transform-react-jsx');\n\nvar transformReactJSXDevelopment = require('@babel/plugin-transform-react-jsx-development');\n\nvar transformReactDisplayName = require('@babel/plugin-transform-react-display-name');\n\nvar transformReactPure = require('@babel/plugin-transform-react-pure-annotations');\n\nvar helperValidatorOption = require('@babel/helper-validator-option');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar transformReactJSX__default = /*#__PURE__*/_interopDefaultLegacy(transformReactJSX);\n\nvar transformReactJSXDevelopment__default = /*#__PURE__*/_interopDefaultLegacy(transformReactJSXDevelopment);\n\nvar transformReactDisplayName__default = /*#__PURE__*/_interopDefaultLegacy(transformReactDisplayName);\n\nvar transformReactPure__default = /*#__PURE__*/_interopDefaultLegacy(transformReactPure);\n\nnew helperValidatorOption.OptionValidator(\"@babel/preset-react\");\n\nfunction normalizeOptions() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  {\n    var pragma = options.pragma,\n        pragmaFrag = options.pragmaFrag;\n    var pure = options.pure,\n        _options$throwIfNames = options.throwIfNamespace,\n        throwIfNamespace = _options$throwIfNames === void 0 ? true : _options$throwIfNames,\n        _options$runtime = options.runtime,\n        runtime = _options$runtime === void 0 ? \"classic\" : _options$runtime,\n        importSource = options.importSource,\n        useBuiltIns = options.useBuiltIns,\n        useSpread = options.useSpread;\n\n    if (runtime === \"classic\") {\n      pragma = pragma || \"React.createElement\";\n      pragmaFrag = pragmaFrag || \"React.Fragment\";\n    }\n\n    var development = !!options.development;\n    return {\n      development: development,\n      importSource: importSource,\n      pragma: pragma,\n      pragmaFrag: pragmaFrag,\n      pure: pure,\n      runtime: runtime,\n      throwIfNamespace: throwIfNamespace,\n      useBuiltIns: useBuiltIns,\n      useSpread: useSpread\n    };\n  }\n}\n\nvar index = helperPluginUtils.declare(function (api, opts) {\n  api.assertVersion(7);\n\n  var _normalizeOptions = normalizeOptions(opts),\n      development = _normalizeOptions.development,\n      importSource = _normalizeOptions.importSource,\n      pragma = _normalizeOptions.pragma,\n      pragmaFrag = _normalizeOptions.pragmaFrag,\n      pure = _normalizeOptions.pure,\n      runtime = _normalizeOptions.runtime,\n      throwIfNamespace = _normalizeOptions.throwIfNamespace;\n\n  return {\n    plugins: [[development ? transformReactJSXDevelopment__default['default'] : transformReactJSX__default['default'], {\n      importSource: importSource,\n      pragma: pragma,\n      pragmaFrag: pragmaFrag,\n      runtime: runtime,\n      throwIfNamespace: throwIfNamespace,\n      pure: pure,\n      useBuiltIns: !!opts.useBuiltIns,\n      useSpread: opts.useSpread\n    }], transformReactDisplayName__default['default'], pure !== false && transformReactPure__default['default']].filter(Boolean)\n  };\n});\nexports.default = index;","map":null,"metadata":{},"sourceType":"script"}