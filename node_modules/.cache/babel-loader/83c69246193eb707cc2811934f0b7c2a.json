{"ast":null,"code":"import { Action } from './const';\nimport { assertUnreachable, buildPropsObj } from './utils';\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case Action.UpdateCode:\n      return Object.assign(Object.assign({}, state), {\n        code: action.payload,\n        codeNoRecompile: ''\n      });\n\n    case Action.UpdateCodeAndProvider:\n      return Object.assign(Object.assign({}, state), {\n        code: action.payload.code,\n        providerValue: action.payload.providerValue,\n        codeNoRecompile: ''\n      });\n\n    case Action.Update:\n      return Object.assign(Object.assign({}, state), {\n        code: action.payload.code,\n        providerValue: action.payload.providerValue,\n        codeNoRecompile: '',\n        props: buildPropsObj(state.props, action.payload.updatedPropValues)\n      });\n\n    case Action.UpdatePropsAndCodeNoRecompile:\n      return Object.assign(Object.assign({}, state), {\n        codeNoRecompile: action.payload.codeNoRecompile,\n        props: buildPropsObj(state.props, action.payload.updatedPropValues)\n      });\n\n    case Action.UpdateProps:\n      return Object.assign(Object.assign({}, state), {\n        codeNoRecompile: '',\n        props: buildPropsObj(state.props, action.payload)\n      });\n\n    case Action.UpdatePropsAndCode:\n      return Object.assign(Object.assign({}, state), {\n        code: action.payload.code,\n        codeNoRecompile: '',\n        props: buildPropsObj(state.props, action.payload.updatedPropValues)\n      });\n\n    case Action.Reset:\n      return Object.assign(Object.assign({}, state), {\n        code: action.payload.code,\n        codeNoRecompile: '',\n        props: action.payload.props,\n        providerValue: action.payload.providerValue\n      });\n\n    default:\n      return assertUnreachable();\n  }\n}","map":null,"metadata":{},"sourceType":"module"}