{"ast":null,"code":"import _slicedToArray from \"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/*\nCopyright (c) 2020 Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\nimport * as React from 'react';\nimport { codeFrameColumns } from '@babel/code-frame';\nexport function assertUnreachable() {\n  throw new Error(\"Didn't expect to get here\");\n}\nexport var formatBabelError = function formatBabelError(error) {\n  var isTemplate = error.includes('/* @babel/template */');\n  return error.replace('1 | /* @babel/template */;', '').replace(/\\((\\d+):(\\d+)\\)/, function (_, line, col) {\n    return \"(\".concat(parseInt(line, 10) - (isTemplate ? 1 : 0), \":\").concat(col, \")\");\n  }).replace('<>', '').replace('</>', '').replace(/(\\d+) \\|/g, function (_, line) {\n    var lineNum = parseInt(line, 10);\n    var newLineNum = lineNum - 1;\n    var lenDiff = line.length - \"\".concat(newLineNum).length;\n    return \"\".concat(' '.repeat(lenDiff)).concat(newLineNum, \" |\");\n  });\n};\nexport var frameError = function frameError(error, code) {\n  if (error) {\n    var found = error.match(/\\((\\d+)\\:(\\d+)\\)$/);\n\n    if (found) {\n      var location = {\n        start: {\n          line: parseInt(found[1], 10),\n          column: parseInt(found[2], 10)\n        }\n      };\n      return \"\".concat(error, \"\\n\\n\").concat(codeFrameColumns(code, location));\n    }\n  }\n\n  return error;\n};\nexport var buildPropsObj = function buildPropsObj(stateProps, updatedPropValues) {\n  var newProps = {};\n  Object.keys(stateProps).forEach(function (name) {\n    newProps[name] = Object.assign({}, stateProps[name]);\n  });\n  Object.keys(updatedPropValues).forEach(function (name) {\n    newProps[name] = {\n      value: typeof updatedPropValues[name] !== 'undefined' ? updatedPropValues[name] : stateProps[name].defaultValue,\n      type: stateProps[name].type,\n      options: stateProps[name].options,\n      enumName: stateProps[name].enumName,\n      description: stateProps[name].description,\n      placeholder: stateProps[name].placeholder,\n      hidden: stateProps[name].hidden,\n      custom: stateProps[name].custom,\n      stateful: stateProps[name].stateful,\n      propHook: stateProps[name].propHook,\n      imports: stateProps[name].imports,\n      defaultValue: stateProps[name].defaultValue\n    };\n  });\n  return newProps;\n}; // creates a duplicate internal state, so we can preserve instant value editing\n// while debouncing top-level state updates that are slow\n\nexport function useValueDebounce(globalVal, globalSet) {\n  var _React$useState = React.useState(globalVal),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      val = _React$useState2[0],\n      set = _React$useState2[1];\n\n  React.useEffect(function () {\n    // begins a countdown when 'val' changes. if it changes before countdown\n    // ends, clear the timeout avoids lodash debounce to avoid stale\n    // values in globalSet.\n    if (val !== globalVal) {\n      var timeout = setTimeout(function () {\n        return globalSet(val);\n      }, 250);\n      return function () {\n        return clearTimeout(timeout);\n      };\n    }\n\n    return void 0;\n  }, [val]);\n  React.useEffect(function () {\n    set(globalVal);\n  }, [globalVal]);\n  return [val, set];\n}\nexport function useHover() {\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      value = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var ref = React.useRef(null);\n\n  var handleMouseOver = function handleMouseOver() {\n    return setValue(true);\n  };\n\n  var handleMouseOut = function handleMouseOut() {\n    return setValue(false);\n  };\n\n  React.useEffect(function () {\n    var node = ref.current;\n\n    if (node) {\n      node.addEventListener('mouseover', handleMouseOver);\n      node.addEventListener('mouseout', handleMouseOut);\n      return function () {\n        node.removeEventListener('mouseover', handleMouseOver);\n        node.removeEventListener('mouseout', handleMouseOut);\n      };\n    }\n\n    return undefined;\n  }, [ref.current]);\n  return [ref, value];\n}\nexport function clone(obj) {\n  if (typeof obj == 'function') {\n    return obj;\n  }\n\n  var result = Array.isArray(obj) ? [] : {};\n\n  for (var key in obj) {\n    var value = obj[key];\n    var type = {}.toString.call(value).slice(8, -1);\n\n    if (type == 'Array' || type == 'Object') {\n      result[key] = clone(value);\n    } else {\n      result[key] = value;\n    }\n  }\n\n  return result;\n}\nexport function getStyles(style, className) {\n  return className ? {\n    className: className\n  } : {\n    style: style\n  };\n}","map":null,"metadata":{},"sourceType":"module"}