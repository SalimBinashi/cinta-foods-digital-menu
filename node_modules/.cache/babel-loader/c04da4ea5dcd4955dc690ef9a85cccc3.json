{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.runAsync = runAsync;\nexports.runSync = runSync;\n\nfunction _traverse() {\n  var data = _interopRequireDefault(require(\"@babel/traverse\"));\n\n  _traverse = function _traverse() {\n    return data;\n  };\n\n  return data;\n}\n\nvar _pluginPass = _interopRequireDefault(require(\"./plugin-pass\"));\n\nvar _blockHoistPlugin = _interopRequireDefault(require(\"./block-hoist-plugin\"));\n\nvar _normalizeOpts = _interopRequireDefault(require(\"./normalize-opts\"));\n\nvar _normalizeFile = _interopRequireDefault(require(\"./normalize-file\"));\n\nvar _generate = _interopRequireDefault(require(\"./file/generate\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction runAsync(config, code, ast, callback) {\n  var result;\n\n  try {\n    result = runSync(config, code, ast);\n  } catch (err) {\n    return callback(err);\n  }\n\n  return callback(null, result);\n}\n\nfunction runSync(config, code, ast) {\n  var file = (0, _normalizeFile.default)(config.passes, (0, _normalizeOpts.default)(config), code, ast);\n  transformFile(file, config.passes);\n  var opts = file.opts;\n\n  var _ref = opts.code !== false ? (0, _generate.default)(config.passes, file) : {},\n      outputCode = _ref.outputCode,\n      outputMap = _ref.outputMap;\n\n  return {\n    metadata: file.metadata,\n    options: opts,\n    ast: opts.ast === true ? file.ast : null,\n    code: outputCode === undefined ? null : outputCode,\n    map: outputMap === undefined ? null : outputMap,\n    sourceType: file.ast.program.sourceType\n  };\n}\n\nfunction transformFile(file, pluginPasses) {\n  var _iterator = _createForOfIteratorHelper(pluginPasses),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var pluginPairs = _step.value;\n      var passPairs = [];\n      var passes = [];\n      var visitors = [];\n\n      var _iterator2 = _createForOfIteratorHelper(pluginPairs.concat([(0, _blockHoistPlugin.default)()])),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _plugin2 = _step2.value;\n\n          var _pass2 = new _pluginPass.default(file, _plugin2.key, _plugin2.options);\n\n          passPairs.push([_plugin2, _pass2]);\n          passes.push(_pass2);\n          visitors.push(_plugin2.visitor);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      for (var _i = 0, _passPairs = passPairs; _i < _passPairs.length; _i++) {\n        var _passPairs$_i = _slicedToArray(_passPairs[_i], 2),\n            plugin = _passPairs$_i[0],\n            pass = _passPairs$_i[1];\n\n        var fn = plugin.pre;\n\n        if (fn) {\n          var result = fn.call(pass, file);\n\n          if (isThenable(result)) {\n            throw new Error(\"You appear to be using an plugin with an async .pre, \" + \"which your current version of Babel does not support.\" + \"If you're using a published plugin, you may need to upgrade \" + \"your @babel/core version.\");\n          }\n        }\n      }\n\n      var visitor = _traverse().default.visitors.merge(visitors, passes, file.opts.wrapPluginVisitorMethod);\n\n      (0, _traverse().default)(file.ast, visitor, file.scope);\n\n      for (var _i2 = 0, _passPairs2 = passPairs; _i2 < _passPairs2.length; _i2++) {\n        var _passPairs2$_i = _slicedToArray(_passPairs2[_i2], 2),\n            _plugin = _passPairs2$_i[0],\n            _pass = _passPairs2$_i[1];\n\n        var _fn = _plugin.post;\n\n        if (_fn) {\n          var _result = _fn.call(_pass, file);\n\n          if (isThenable(_result)) {\n            throw new Error(\"You appear to be using an plugin with an async .post, \" + \"which your current version of Babel does not support.\" + \"If you're using a published plugin, you may need to upgrade \" + \"your @babel/core version.\");\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction isThenable(val) {\n  return !!val && (typeof val === \"object\" || typeof val === \"function\") && !!val.then && typeof val.then === \"function\";\n}","map":null,"metadata":{},"sourceType":"script"}