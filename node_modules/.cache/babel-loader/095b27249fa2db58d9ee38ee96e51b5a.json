{"ast":null,"code":"import _slicedToArray from \"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/belbet/Project files/cinta-foods-digital-menu/client/src/components/Input.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\nexport default function Input(_ref) {\n  var type = _ref.type,\n      name = _ref.name,\n      index = _ref.index;\n\n  var _useContext = useContext(Context),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      items = _useContext2[0],\n      updateItem = _useContext2[1]; // get items\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      orders = _useState2[0],\n      setOrders = _useState2[1];\n\n  console.log(\"ITEMS:\", items);\n  return /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    inputMode: \"numeric\",\n    pattern: \"[0-9]*\",\n    onChange: function onChange(_ref2) {\n      var target = _ref2.target;\n      updateItem(type, index, target.value);\n      setOrders(orders.updateItem(name));\n    },\n    name: name.replace(\" \", \"-\").toLowerCase(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/home/belbet/Project files/cinta-foods-digital-menu/client/src/components/Input.js"],"names":["React","useContext","useState","Context","Input","type","name","index","items","updateItem","orders","setOrders","console","log","target","value","replace","toLowerCase"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,eAAe,SAASC,KAAT,OAAsC;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,IAAe,QAAfA,IAAe;AAAA,MAATC,KAAS,QAATA,KAAS;;AACnD,oBAA4BN,UAAU,CAACE,OAAD,CAAtC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,UAAd,mBADmD,CAEnD;;;AACA,kBAA4BP,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,KAAtB;AACA,sBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,SAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,QAAQ,EAAE,yBAAgB;AAAA,UAAbM,MAAa,SAAbA,MAAa;AACxBL,MAAAA,UAAU,CAACJ,IAAD,EAAOE,KAAP,EAAcO,MAAM,CAACC,KAArB,CAAV;AACAJ,MAAAA,SAAS,CAACD,MAAM,CAACD,UAAP,CAAkBH,IAAlB,CAAD,CAAT;AACD,KAPH;AAQE,IAAA,IAAI,EAAEA,IAAI,CAACU,OAAL,CAAa,GAAb,EAAkB,GAAlB,EAAuBC,WAAvB,EARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Context } from \"../Context\";\n\nexport default function Input({ type, name, index }) {\n  const [items, updateItem] = useContext(Context);\n  // get items\n  const [orders, setOrders] = useState([]);\n  console.log(\"ITEMS:\", items);\n  return (\n    <input\n      type=\"text\"\n      inputMode=\"numeric\"\n      pattern=\"[0-9]*\"\n      onChange={({ target }) => {\n        updateItem(type, index, target.value);\n        setOrders(orders.updateItem(name))\n      }}\n      name={name.replace(\" \", \"-\").toLowerCase()}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}