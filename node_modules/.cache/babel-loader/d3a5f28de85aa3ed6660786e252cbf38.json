{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _createForOfIteratorHelper = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _core = require(\"@babel/core\");\n\nvar PURE_CALLS = new Map([[\"react\", [\"cloneElement\", \"createContext\", \"createElement\", \"createFactory\", \"createRef\", \"forwardRef\", \"isValidElement\", \"memo\", \"lazy\"]], [\"react-dom\", [\"createPortal\"]]]);\n\nvar _default = (0, _helperPluginUtils.declare)(function (api) {\n  api.assertVersion(7);\n  return {\n    name: \"transform-react-pure-annotations\",\n    visitor: {\n      CallExpression: function CallExpression(path) {\n        if (isReactCall(path)) {\n          (0, _helperAnnotateAsPure.default)(path);\n        }\n      }\n    }\n  };\n});\n\nexports.default = _default;\n\nfunction isReactCall(path) {\n  if (!_core.types.isMemberExpression(path.node.callee)) {\n    var callee = path.get(\"callee\");\n\n    var _iterator = _createForOfIteratorHelper(PURE_CALLS),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var _step$value = _slicedToArray(_step.value, 2),\n            module = _step$value[0],\n            methods = _step$value[1];\n\n        var _iterator2 = _createForOfIteratorHelper(methods),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var method = _step2.value;\n\n            if (callee.referencesImport(module, method)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return false;\n  }\n\n  var _iterator3 = _createForOfIteratorHelper(PURE_CALLS),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var _step3$value = _slicedToArray(_step3.value, 2),\n          _module = _step3$value[0],\n          _methods = _step3$value[1];\n\n      var object = path.get(\"callee.object\");\n\n      if (object.referencesImport(_module, \"default\") || object.referencesImport(_module, \"*\")) {\n        var _iterator4 = _createForOfIteratorHelper(_methods),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _method = _step4.value;\n\n            if (_core.types.isIdentifier(path.node.callee.property, {\n              name: _method\n            })) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return false;\n}","map":null,"metadata":{},"sourceType":"script"}