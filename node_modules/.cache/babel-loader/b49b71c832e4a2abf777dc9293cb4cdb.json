{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = optimiseCallExpression;\n\nvar t = require(\"@babel/types\");\n\nfunction optimiseCallExpression(callee, thisNode, args, optional) {\n  if (args.length === 1 && t.isSpreadElement(args[0]) && t.isIdentifier(args[0].argument, {\n    name: \"arguments\"\n  })) {\n    if (optional) {\n      return t.optionalCallExpression(t.optionalMemberExpression(callee, t.identifier(\"apply\"), false, true), [thisNode, args[0].argument], false);\n    }\n\n    return t.callExpression(t.memberExpression(callee, t.identifier(\"apply\")), [thisNode, args[0].argument]);\n  } else {\n    if (optional) {\n      return t.optionalCallExpression(t.optionalMemberExpression(callee, t.identifier(\"call\"), false, true), [thisNode].concat(_toConsumableArray(args)), false);\n    }\n\n    return t.callExpression(t.memberExpression(callee, t.identifier(\"call\")), [thisNode].concat(_toConsumableArray(args)));\n  }\n}","map":null,"metadata":{},"sourceType":"script"}