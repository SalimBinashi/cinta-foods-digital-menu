{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/belbet/Project files/cinta-foods-digital-menu/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.maybeAsync = maybeAsync;\nexports.forwardAsync = forwardAsync;\nexports.isThenable = isThenable;\nexports.waitFor = exports.onFirstPause = exports.isAsync = void 0;\n\nfunction _gensync() {\n  var data = require(\"gensync\");\n\n  _gensync = function _gensync() {\n    return data;\n  };\n\n  return data;\n}\n\nvar id = function id(x) {\n  return x;\n};\n\nvar runGenerator = _gensync()( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(item) {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.delegateYield(item, \"t0\", 1);\n\n        case 1:\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n\nvar isAsync = _gensync()({\n  sync: function sync() {\n    return false;\n  },\n  errback: function errback(cb) {\n    return cb(null, true);\n  }\n});\n\nexports.isAsync = isAsync;\n\nfunction maybeAsync(fn, message) {\n  return _gensync()({\n    sync: function sync() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var result = fn.apply(this, args);\n      if (isThenable(result)) throw new Error(message);\n      return result;\n    },\n    async: function async() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return Promise.resolve(fn.apply(this, args));\n    }\n  });\n}\n\nvar withKind = _gensync()({\n  sync: function sync(cb) {\n    return cb(\"sync\");\n  },\n  async: function async(cb) {\n    return cb(\"async\");\n  }\n});\n\nfunction forwardAsync(action, cb) {\n  var g = _gensync()(action);\n\n  return withKind(function (kind) {\n    var adapted = g[kind];\n    return cb(adapted);\n  });\n}\n\nvar onFirstPause = _gensync()({\n  name: \"onFirstPause\",\n  arity: 2,\n  sync: function sync(item) {\n    return runGenerator.sync(item);\n  },\n  errback: function errback(item, firstPause, cb) {\n    var completed = false;\n    runGenerator.errback(item, function (err, value) {\n      completed = true;\n      cb(err, value);\n    });\n\n    if (!completed) {\n      firstPause();\n    }\n  }\n});\n\nexports.onFirstPause = onFirstPause;\n\nvar waitFor = _gensync()({\n  sync: id,\n  async: id\n});\n\nexports.waitFor = waitFor;\n\nfunction isThenable(val) {\n  return !!val && (typeof val === \"object\" || typeof val === \"function\") && !!val.then && typeof val.then === \"function\";\n}","map":null,"metadata":{},"sourceType":"script"}